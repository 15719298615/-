2019.10.22
概述运输层和服务：
运输层协议为运行在不同主机上的应用进程之间提供了逻辑通信功能。网络应用程序可以使用多种的运输层协议。
运输层和网络层的关系：
运输层位于网络层之上，网络层提供了主机之间的逻辑通信，而运输层为运行在不同主机上的进
程之间提供了逻辑通信。
多路复用与多路分解：
*就是将由网络层提供的主机到主机交付服务延伸到为运行在主机上的应用程序提供进程到进程的
交付服务。
*在目的主机，运输层从紧邻器下的网络层接受报文段。
*完成方式：一个进程有一个或多个套接字，它相当于从网络向进程传递数据和从进程向网络传递
数据的门户。现在我们考虑接收主机怎样将一个到达的运输层报文段定向到适当的套接字。为此
目的，每个运输层报文段中具有几个字段。在接收端，运输层检查这些字段，识别出接收套接
字，进而将报文段定向到该套接字。将运输层报文段中的数据交付到正确的套接字的工作称为多
路分解。在源主机从不同套接字中收集数据块，并为每个数据块封装上首部信息（这将在以后用
于分解）从而生成报文段，然后将报文段传递到网络层，所有这些工作称为多路复用。
*所以通过以上描述我们可以知道运输层多路复用要求：1，套接字由唯一标识。2，每个报文段
有特殊字段来指示该报文段所要交付到的套接字。这些特殊字段是源端口号字段和目的端口号字
段。（0~1023是周知端口号，是被用了的）。
无连接运输：UDP
优势：1，何时，发送什么数据的应用层控制更为精细（TCP有拥塞控制机制，重发）。2，无需
建立连接。3，无连接状态。4，分组首部开销小。（每个TCP报文都有20个字节的首部开销，而
UDP只有8个）
面向连接的运输：TCP
*TCP被称为是面向连接的，这是因为在一个应用进程可以开始向另一个应用进程发送数据之前，
这两个进程必须先相互“握手”，即他们必须相互发送某些预备报文段，以建立确保数据传输的参
数。
*TCP连接提供的是全双工服务。TCP连接也总是点对点的。ACK（确认号）