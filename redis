
redis简介：
redis是一个速度非常快的非关系型数据库，它可以存储键（key）与五种不同的类型的值（value）之间的映射（mapping），可以将存储在内存中的键值对数据持久化到硬盘，可以使用复制特性来扩展读性能，还可以使用客户端分片来扩展写性能。
redis的字符串键最大只能存储512mb
redis与其他数据库和软件的对比：
redis不使用表，他的数据库也不会预定义或者强制要求用户对Redis存储的不同数据进行关联。
高性能键值缓存服务器memcached也经常被拿来与Redis进行比较：这两者都可用于存储键值映射，彼此的性能也相差无几，但是Redis能自动以两种不同的方式将数据写入硬盘，并且Redis除了能存储普通的字符串以外，还可以存储其他4中数据结构，而memcached只能存储普通的字符串键。


使用Redis的理由：
数据库的常用方法是存储长期的报告数据，并将这些报告数据用作固定时间范围内的聚合数据。手机聚合数据的常见做法是：先将各个行插入一个报告表里，之后在通过扫描这些行来收集聚合数据，并根据收集到的聚合数据来更新聚合表中已有的那些行。之所以使用插入行的方式来存储是因为对于大部分数据库来说，插入行操作的执行速度非常快。不过，对标里面的行进行更新却是一个速度非常慢的操作，因为这种更新除了会引起一次随机读之外，还可能会引起一次随机写。
而在Redis中，用户可以直接使用原子（atomic）incr命令及其变种来计算聚合数据，并且因为Redis将数据存储在内存里面，而且发送给Redis的命令请求并不需要经过典型的查询分析器或者查询优化器进行处理，所以对Redis存储的数据执行随机写的速度总是非常快的。
使用Redis而不是关系型数据库或者其他硬盘存储数据库，可以避免写入不必要的临时数据，也免去了对临时数据进行扫描或者删除的麻烦，并最终改善程序的性能。


Redis数据结构简介：
Redis可以存储键与五种不同数据结构类型之间的映射，这五种数据结构的类型分别为
String，List(一个链表，链表上每一个节点都包含了一个字符串)，set,Hash(包含键值对的无序散列表)，zset（有序集合）

redis中的String字符串：
字符串命令：
set，get，del

Redis中的列表：（list）
rpush  将给定值推入列表的右端。推入后该命令会返回列表当前的长度。
lrange  获取列表在给定范围上的所有值。0表示开始，-1表示范围的结束。
lindex  获取列表在给定位置上的单个元素。
lpop  从列表的左端弹出一个值，并返回被弹出的值。

Redis的集合：（set）
redis的集合和列表都可以存储多个字符串，他们之间的不同在于，列表可以存储多个相同的字符串，而集合则通过使用散列表来保证自己存储的每个字符串都是不同的。
命令：sadd  将集合元素添加到集合
    smembers  返回集合中所有元素
    sismember检查给定的元素是否存在与集合中（返回1，0）
    srem  如果给定的元素存在于集合中，那么移除这个元素。返回被移除元素的数量。

Redis的散列：（hash）
命令：hset  在散列中关联起给定的键值对
hget  获取指定散列表的值
hgetall  获取散列包含的所有键值对
hdel  如果给定的键存在于散列里面，那么一处这个键。


Redis的有序集合：（zset）
命令：zadd  将一个带有给定分支的成员添加到有序集合里面
zrange  根据元素在有序排列中所处的位置，从有序集合里面获取多个元素
zrangebyscore  获取有序集合在给定分值范围内的所有元素
zrem  如果给定成员存在与有序集合，那么移除这个元素
  
 
 
