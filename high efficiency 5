我是谁：getClass（）说明本质上是谁，而toString（）是当前的职位名片。
我从哪来：Object（）构造方法是生产对象的基本步骤，clone（）是繁殖对象的另一种方式。
我到那里去：finalize（）是在对象销毁时出发的对象。

这里重点介绍clone（）方法：
clone分为浅拷贝，一般拷贝和彻底深拷贝。
浅拷贝只复制当前对象的所有数据基本类型，以及相应的引用变量，但没有复制引用变量指向的实际对象。
而彻底深拷贝是在成功clone一个对象后，此对象与母对象在任何引用路径上都不存在共享的实例对象，但是在引用路径递归越深，则越接近JVM底层对象，且发现彻底深拷贝实现难度越大。
介于两者之间的为一般深拷贝。
归根到底，慎用Object的clone方法来拷贝对象，因为对象的clone方法一般默认为浅拷贝，若想实现深拷贝，则需要覆写clone（）方法实现引用对象的深度遍历式拷贝。


在JDK9之后finalize（）方法直接被标记为过时方法。


抽象类与接口的区别(前抽象类后接口)：
定义关键字：abstract；interface
子类继承或实现关键字：extends；implements
方法实现：可以有；不能用，但在JDK8及以后允许有default实现
方法访问控制符：无限制；有限制，默认是public abstract类型
属性访问控制符：无限制；有限制，默认是public static final类型
静态方法：可以有；不能有
static{}静态代码块：可以有；不能有
本类型之间拓展：单继承；多继承
本类型之间扩展关键字：extends；extends


字符串：
字符串相关的有三种，为String，StringBuilder，StringBuffer。String是只读字符串，对他的任何改动都是创建一个新对象，再把引用指向该对象。String对象赋值操作后，会在常量池中进行缓存，如果下次申请创建对象时，缓存中对象已经存在，则直接返回相应引用给创建者。而StringBuffer则可以在原对象上进行修改，是线程安全的。JDK5引入的StringBuffer和StringBuilder均继承自AbstractStringBuilder，而StringBuilder是非线程安全的。
