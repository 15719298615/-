应用层协议：
电子邮件：SMTP（TCP)
远程终端访问：Telnet（TCP）
Web：HTTP（TCP）
文件传输：FTP（TCP）
流式多媒体：HTTP（TCP）
因特网电话：SIP（UDP）
*应用层协议定义了运行在不同端系统上的应用程序进程如何相互请求报文和响应报文。特别是应用层协议定义了：
*交换的报文类型，例如请求报文和响应报文。
*各种报文类型的语法，如报文中的各个字段及这些字段是如何描述的。
*字段的语义，即这些字段中包含的信息的含义。
Web和HTTP：
*Web的应用层协议是超文本传输协议，他是Web的核心，在RFC1945和RFC2616中进行了定义。HTTP由两个程序
实现：一个客户程序和一个服
务程序。客户程序和服务器程序运行在不同的端系统中，通过交换HTTP报文进行会话。HTTP定义了这些报文结构以及客户和服务器进行报文交换
的方式。HTTP使用TCP作为他的支撑运输的协议。
*因为HTTP服务器并不保存关于客户的任何信息，所以我们说HTTP是一个无状态协议。
三次握手：
客户端向服务器发送一个小TCP报文段，服务器用一个小TCP报文段做出确认和响应，最后客户向服务器返回确认。三次握手的前两次占用了一个
RTT（往返时间，指一个段分组从客户端发送到服务器然后返回到客户所花费的时间），完成了三次握手的前两次之后，客户结合三次握手的第三部分（确认）向该TCP链
接发送一个HTTP请求报文。一旦该请求报文到达了服务器，服务器就在该TCP连接上发送HTML文件。该HTTP请求/响应花去了另一个RTT。

常见状态码：
200 ok
301 请求对象已经被永久的转移了，新的URL定义在响应报文的Location：首部行中。客户软件将自动获取新的URL。
400 一个通用的差错代码，指示该请求不能被服务器理解。
404 没找到
500 服务器错误
505 服务器不支持请求报文使用的HTTP协议版本。
用户与服务器的交互：cookie
*HTTP使用了Cookie。cookie在RFC 6265 中定义，它允许站点堆用户进行跟踪。
*Cookie技术有4个组件：1，在HTTP响应报文中的一个cookie首部行。2，在HTTP请求报文中的一个cookie首部行。3，在用户端系统中保留有一个cookie文件，并由用户的浏览器进行管理。
4，位于Web站点的一个后端数据库。
文件传输协议：FTP
HTTP和FTP都是运行在TCP上，但是不同的是，FTP是使用了两个并行的TCP连接来传输文件，一个是控制连接，一个是数据连接。
DNS：域名系统 （因特网的目录服务）
*识别主机的方式有两种：通过主机名或者IP地址。但是人们喜欢便于记忆的主机名标识方式，而路由器则喜欢定长的，有着层次结构的IP地址。为了折中这种偏好，我们需要一种能进行主机名
到IP地址转换的目录服务。这就是域名系统的主要任务。
*DNS是：1，一个由分层的DNS服务器实现的分布式数据库；2，一个是的主机能够查询分布式数据库的应用层协议。
*DNS通常是由其他应用层协议所使用的，包括HTTP，FTP和SMTP，将用户提供的主机名解析为IP地址。
*除了进行主机名到IP地址的转换外，DNS还提供了一些重要的功能：
主机别名：有着复杂主机名的主机能拥有一个或者多个别名。
邮件服务器别名：同理。
负载分配:DNS也用于在冗余的服务器之间进行负载分配。
分布式，层次数据库：
为了处理扩展性问题，DNS使用了大量DNS服务器，他们以层次方式分组并且分布在全世界范围。（根DNS服务器，顶级域DNS服务器（TLD），权威DNS服务器）
从上往下查，先向根服务器找，根据后缀返回对应的TLD服务器，TLD再映射会权威服务器，再去权威服务器找，最后返回本地DNS服务器，最后得到IP地址。
