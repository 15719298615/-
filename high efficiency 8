jvm
classloader的使命就是提前加载.class类文件到内存中。
java的类加载器是一个运行时核心基础设施模块，主要是在启动之处进行类的Load，Link，Init，即加载连接初始化。
第一步：Load阶段读取类文件产生的二进制流，饼转化为特定的数据结构，初步校验cafe babe魔法数，常量池，文件长度，是否有父类等，然后创建对应的java.lang.Class实例。

第二步：Link阶段包括验证，准备，解析三个步骤。验证是更详细的校验，比如final是否合规范，类型是否正确，静态变量是否合理等；准备阶段是为静态变量分配内存，并设置默认值，解析类和方法确保类之间的相互引用正确性，完成内存结构布局。

第三步:Init阶段执行类构造器<clinit>方法，如果赋值运算是通过其他类的静态方法来完成的，那么会马上解析另一个类，在虚拟机栈中执行完毕后通过返回值进行赋值。

