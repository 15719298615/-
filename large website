在浏览器端：
  可以通过浏览器缓存，使页面压缩，合理布局页面，减少Cookie传输等手段改善性能。
  还可以使用CDN，将网站静态内容分发至离用户最近的网络服务商机房，是用户通过最短访问路径获取数据。还可以在网站机房部署反向代理服务器，缓存热点文件，加快请求响应速度，减轻应用服务器负载压力。
在应用服务器端：
  使用服务器本地缓存和分布式缓存，通过缓存在内存中的热点数据处理用户请求，加快请求处理过程，减轻数据库负载压力。
  也可以通过异步操作将用户请求发送至消息队列等待后续任务处理，而当前请求直接返回响应给用户。  
  在网站有很多高并发请求的情况下，可以将多台应用服务器组成一个集群共同对外服务，提高整体处理能力，改善性能。
在代码层面：
  可以通过多线程，改善内存管理等手段优化性能。
在数据库服务器端：
   索引，缓存，sql优化等性能优化手段都已经比较成熟。
 
 大型网站核心架构要素：
性能，可用性（一直可用）
伸缩性（指通过不断向集群中加入服务器的手段来缓解不断上升的用户并发访问压力和不断增长的数据需求）
扩展性（网站训速发展，功能不断扩展，如何设计网站的架构使其能够快速响应需求变化，是网站可扩展架构主要的目的）
安全性
